#!/bin/bash
if [[ $# < 2 ]]; then
  echo "lets-encrypt FQDN IP"
  exit
fi
FQDN=$1
HOST=$(echo $FQDN | sed -e 's/^\([^.]*\)\.\(.*\)$/\1/')
DOMAIN=$(echo $FQDN | sed -e 's/^\([^.]*\)\.\(.*\)$/\2/')
IP=$2
echo FQDN=$FQDN
echo HOST=$HOST
echo DOMAIN=$DOMAIN
echo IP=$IP
GATEWAY=gateway.rstms.net
ACME_STAGING=https://acme-staging-v02.api.letsencrypt.org/directory
ACME_PROD=https://acme-v02.api.letsencrypt.org/directory
if [ -v STAGING ]; then
  ACME=$ACME_STAGING
else
  ACME=$ACME_PROD
fi
echo ACME=$ACME
GATEWAY_IP=$(dnsip $GATEWAY)
CERT_DIR=/certs

dns_delete() {
  DELETE_FQDN=$1
  RECORD_ID=$(cli4 --get name=$DELETE_FQDN type=A /zones/:rstms.net/dns-records | jq -r '.[]|.id')
  echo "RECORD_ID=$RECORD_ID"
  echo cli4 --delete /zones/:rstms.net/dns-records/:$RECORD_ID
  cli4 --delete /zones/:rstms.net/dns-records/:$RECORD_ID
}

# use awk to strip trailing white space
dns_lookup() {
  dnsip $1 | awk '{print $1}'
}

dns_wait() {
  WAIT_IP=$1
  echo WAIT_IP=$WAIT_IP
  echo FQDN=$FQDN
  echo -n "Waiting for DNS to propagate..."
  DNS_FOUND=0
  while [[ $DNS_FOUND == 0 ]] ; do
    DNS_IP=$(dns_lookup $FQDN)
    if [ "$DNS_IP" = "$WAIT_IP" ]; then
      echo "DNS_IP=$DNS_IP"
      DNS_FOUND=1
    else
      echo -n .
      sleep 1
    fi
  done
}

dns_update() {
  dns_delete $FQDN
  NEW_IP=$1
  echo "ADDING $FQDN $NEW_IP"
  echo cli4 --post name="$HOST" type="A" content="$NEW_IP" /zones/:$DOMAIN/dns-records
  cli4 --post name="$HOST" type="A" content="$NEW_IP" /zones/:$DOMAIN/dns-records
  dns_wait $NEW_IP
}

dns_update $GATEWAY_IP

SSH_CONFIG=${HOME}/.ssh/config
sudo ssh -v -F ${SSH_CONFIG} -N -g -R *:80:localhost:80 $GATEWAY >ssh.log 2>&1 &
step ca certificate $FQDN $CERT_DIR/$FQDN.crt $CERT_DIR/$FQDN.key --acme $ACME
sudo pkill ssh

dns_delete $FQDN
dns_update $IP
